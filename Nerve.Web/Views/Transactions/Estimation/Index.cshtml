@model Nerve.Web.ViewModels.EstimationViewModel
@using Microsoft.AspNetCore.Http
@using Nerve.Common.Enums
@using Nerve.Common
@using NonFactors.Mvc.Grid
@inject Nerve.Common.Translations.ILanguageTranslator _languageTranslator
@{
    var languageId = (LanguageType)ViewContext.HttpContext.Session.GetInt32(WebConstants.SessionKeys.Language);
    var persianFont = ViewContext.HttpContext.Session.GetString(WebConstants.SessionKeys.PersianFont);
    var resourceKeys = new List<string>
{
LanguageKeys.Amount,
LanguageKeys.Brand,
LanguageKeys.Cancelled,
LanguageKeys.CollectionReferenceNumberShort,
LanguageKeys.CollectionLocation,
LanguageKeys.Customer,
LanguageKeys.CustomerApproved,
LanguageKeys.Date,
LanguageKeys.Delivered,
LanguageKeys.Discount,
LanguageKeys.ErrorFieldSelectionRequired,
LanguageKeys.ErrorFieldRequiredLocationCode,
LanguageKeys.Engineer,
LanguageKeys.Estimation,
LanguageKeys.EstimationDetails,
LanguageKeys.ExpectedDeliveryDate,
LanguageKeys.ExceptionTitle,
LanguageKeys.Location,
LanguageKeys.LabourChargeType,
LanguageKeys.Invoiced,
LanguageKeys.ItemTotal,
LanguageKeys.ImeiNumber,
LanguageKeys.MsnNumber,
LanguageKeys.JobNumber,
LanguageKeys.JobNumbers,
LanguageKeys.JobStatus,
LanguageKeys.LiquidDamageSlashBer,
LanguageKeys.Model,
LanguageKeys.ModelLinking,
LanguageKeys.NetTotal,
LanguageKeys.NoRecodsAvaiable,
LanguageKeys.Open,
LanguageKeys.PartCode,
LanguageKeys.PartDescription,
LanguageKeys.PhysicalCondition,
LanguageKeys.Product,
LanguageKeys.Remarks,
LanguageKeys.RepairCharges,
LanguageKeys.ServiceType,
LanguageKeys.SalesTax,
LanguageKeys.Total,
LanguageKeys.QCPassed,
LanguageKeys.Quantity,
LanguageKeys.UnitRate,
LanguageKeys.UnitDetails,
LanguageKeys.ValidationFailureDescription,
LanguageKeys.ValidationFailureSummary,
LanguageKeys.WaitingForPart,
LanguageKeys.WarrantyType
};
    var translateItems = await _languageTranslator.TranslateManyAsync(resourceKeys, languageId);
}

<script>
    $(document).ready(function () {
        //estimation date calender
        setCalender("#estimation-date-calender", "#text-estimation-date");

        //prevent form default
        $("#estimation-form").on("keypress", function (event) {
            if (event.keyCode == ENTER_KEYCODE) {
                event.preventDefault();
                return;
            }
        });

        $("#job-number-search").on("click", function () {
            $("#is-save-request").val(false);
            bindJobNumbers();
        });

        //search job number enter event
        $("#text-job-number").on('keyup', function (e) {
            if (e.keyCode == ENTER_KEYCODE) {
                bindJobNumbers();
            }
        });

        $("button[name=select-job-number]").click(function () {
            let point = $('input[name=job-number-radio]:checked');
            if (point && point.length > 0) {
                $("#job-number-number").val(point.val());
                $("#job-numbers-modal").modal('hide');
                let url = `@Url.Action(WebConstants.PageRoute.Jobs, WebConstants.Controllers.Job)/${point.val()}`;
                $.ajax({
                'url': url,
                'type': 'GET',
                'async': false,
                'dataType': 'application/json',
                complete: function (response) {
                    if (!!response && response.status == @StatusCodes.Status200OK) {
                        //set all the parameters
                    }
                    else {
                        var title = '@Html.Raw(translateItems[LanguageKeys.ExceptionTitle])';
                        showNotification(title, response.statusText,@Convert.ToInt32(NotificationType.Error), false);
                    }
                    hideSpinner();
                }
            });
            } else {
                $("#job-numbers-error").removeClass('hide');
            }
        });

        $("#close-job-numbers-error").click(function () {
            $("#job-numbers-error").addClass('hide');
        });


        function bindJobNumbers() {
            showSpinner();
            let locationCode = $("#text-location-code").val();
            if (checkNullOrEmpty(locationCode)) {
                let errors = [];
                errors.push('@translateItems[LanguageKeys.ErrorFieldRequiredLocationCode]');
                displayErrors(errors);
                hideSpinner();
                return;
            }

            let searchValue = $("#text-job-number").val();
            let url = `@Url.Action(WebConstants.PageRoute.GetJobByLocation, WebConstants.Controllers.Job)/${encodeURI(locationCode)}`;
            if (!!searchValue)
                url = encodeURI(`${url}/${searchValue}`);
            $('#job-numbers-partial').load(url, function () {
                $("#job-numbers-modal").modal('show');
                $("#job-numbers-error").addClass('hide');
                hideSpinner();
            });
        }

        function displayErrors(errors) {
            if (!!errors && errors.length > 0) {
                let errorHtml = "<div><b>@Html.Raw(translateItems[LanguageKeys.ValidationFailureDescription])</b><br><ul>";
                for (var i = 0; i < errors.length; i++) {
                    errorHtml += `<li class='red'>${errors[i]}</li>`;
                }
                errorHtml + "</ul></div>";
                $("#validation-summary-item").html(errorHtml);
                $("#validation-summary-modal").modal('show');
            } else {
                $("#validation-summary-modal").modal('hide');
                $("#validation-summary-item").empty();
                $("#estimation-form").submit();
            }

        }
    });
</script>
<partial name="@WebConstants.ViewPage.Partial.Actions" model="@Model.PageActionBarModel" />
<form asp-action="@WebConstants.PageRoute.JobAllocation" asp-controller="@WebConstants.Controllers.Job"
      data-ajax="true"
      data-ajax-method="POST"
      data-ajax-mode="replace"
      data-ajax-update="#ajaxpanel"
      id="estimation-form">
    <div class="panel panel-default">
        @Html.HiddenFor(model => model.IsSaveRequest, new { @id = "is-save-request" })
        <div id="ajaxpanel" class="panel-body">
            <div class="row row-space">
                <div class="col-sm-2 text-right @persianFont">
                    @Html.Raw(translateItems[LanguageKeys.Location])
                </div>
                <div class="col-sm-4 has-feedback">
                    @Html.TextBoxFor(model => model.Estimation.LocationCode, new { @class = "form-control", @id = "text-location-code" })
                </div>
                <div class="col-sm-2 text-right @persianFont">
                    @Html.Raw(translateItems[LanguageKeys.Date])
                </div>
                <div class="col-sm-4 has-feedback">
                    <div class='input-group date'>
                        @Html.TextBoxFor(model => model.Estimation.Date, new { @class = "form-control disabled", @id = "text-estimation-date", @readonly = "readonly" })
                        <span span class="input-group-addon cursor" id="estimation-date-calender">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="row row-space">
                <div class="col-sm-2 text-right @persianFont">
                    @Html.Raw(translateItems[LanguageKeys.JobNumber])
                </div>
                <div class="col-sm-4 has-feedback">
                    @Html.TextBoxFor(model => model.Estimation.JobNumber, new { @class = "form-control", @id = "text-job-number" })
                    <span id="job-number-search" class="glyphicon glyphicon-search cursor form-control-feedback btn-primary"></span>
                </div>
                <div class="col-sm-2 text-right @persianFont">
                    @Html.Raw(translateItems[LanguageKeys.Customer])
                </div>
                <div class="col-sm-1 no-right-padding">
                    @Html.DropDownListFor(model => model.Estimation.CustomerType, new SelectList(Model.CustomerTypes, "Value", "Text"), "Select...", new { @class = "form-control", @id = "text-estimation-date" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.Estimation.CustomerName, new { @id = "text-estimation-date", @class = "form-control" })
                </div>
            </div>
            <div class="row row-space">
                <div class="col-sm-2 text-right @persianFont">
                    @Html.Raw(translateItems[LanguageKeys.Product])
                </div>
                <div class="col-sm-4 has-feedback">
                    @Html.DropDownListFor(model => model.Estimation.Product, new SelectList(Model.Products, "Value", "Text"), "Select...", new { @class = "input-control input-xl", @id = "dropdown-product" })
                    @Html.HiddenFor(model => model.Estimation.ProductName, new { @id = "product-name" })
                </div>
            </div>
            <div class="row row-space">
                <div class="col-sm-2 text-right @persianFont">
                    @Html.Raw(translateItems[LanguageKeys.Brand])
                </div>
                <div class="col-sm-4 has-feedback">
                    @Html.DropDownListFor(model => model.Estimation.Brand, new SelectList(Model.Brands, "Value", "Text"), "Select...", new { @class = "input-control input-xl", @id = "dropdown-brand" })
                    @Html.HiddenFor(model => model.Estimation.BrandName, new { @id = "brand-name" })
                </div>
            </div>
            <div class="row row-space">
                <div class="col-sm-2">
                </div>
                <div class="col-sm-10">
                    @Html.RadioButtonList("JobStatus", Model.JobStatusItems, 3)
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div id="ajaxpanel" class="panel-body">
                <ul class="nav nav-pills">
                    <li class="active">
                        <a href="#login-details" class="@persianFont" data-toggle="tab">@Html.Raw(translateItems[LanguageKeys.EstimationDetails])</a>
                    </li>
                    <li>
                        <a href="#imei-history" class="@persianFont" data-toggle="tab">@Html.Raw(translateItems[LanguageKeys.UnitDetails])</a>
                    </li>
                </ul>
                <div class="tab-content clearfix">
                    <div class="tab-pane active" id="login-details">
                        <div class="panel-body">
                            @*@Html.ListBoxFor(model => null, new List<SelectListItem>(), new { @id = "multiselect-tracking-number", @class = "hidden" })*@
                            @(Html.Grid(Model.PartEstimations).Build(columns =>
                                                                        {
                                                                            columns.Add(model => Html.CheckBox("checkbox", new { @value = model.PartCode, @class = "estimation-grid-checkbox" })).Titled(Html.CheckBox("checkbox", new { @class = "estimation-grid-header-checkbox" }));
                                                                            columns.Add(model => model.PartCode).Titled(translateItems[LanguageKeys.PartCode]);
                                                                            columns.Add(model => model.PartDescription).Titled(translateItems[LanguageKeys.PartDescription]);
                                                                            columns.Add(model => model.Quantity).Titled(translateItems[LanguageKeys.Quantity]);
                                                                            columns.Add(model => model.UnitRateFc).Titled(translateItems[LanguageKeys.UnitRate]);
                                                                            columns.Add(model => model.UnitRateBc).Titled(translateItems[LanguageKeys.UnitRate]);
                                                                            columns.Add(model => model.Amount).Titled(translateItems[LanguageKeys.Amount]);
                                                                        })
                                                                        .Empty(translateItems[LanguageKeys.NoRecodsAvaiable])
                                                                        .Filterable()
                                                                        .Sortable()
                                                                        .Pageable()
                            )
                        </div>
                    </div>
                    <div class="tab-pane" id="imei-history">
                        <div class="row">
                            @*<div class="col-sm-2">@Html.Raw(translateItems[LanguageKeys.CollectionReferenceNumberShort])</div>
                                <div class="col-sm-2">@Html.TextBoxFor(model => model.ReferenceNumber)</div>
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2"></div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="modal fade" id="job-numbers-modal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <span class="modal-title model-title-header">@Html.Raw(translateItems[LanguageKeys.JobNumbers])</span>
            </div>
            <div class="modal-body popup-grid-container">
                <div id="job-numbers-error" class="alert alert-danger hide">
                    <button type="button" id="close-job-numbers-error" class="close" aria-hidden="true">
                        &times;
                    </button>
                    <span class="glyphicon glyphicon-remove-circle red">
                    </span>
                    <span class="@persianFont">
                        @translateItems[LanguageKeys.ErrorFieldSelectionRequired]
                    </span>
                </div>
                <div id="job-numbers-partial"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" name="select-job-number" id="select-job-number">Select</button>
            </div>
        </div>
    </div>
</div>
<partial name="@WebConstants.ViewPage.Partial.ValidationSummary" model="@translateItems[LanguageKeys.ValidationFailureSummary]" />
